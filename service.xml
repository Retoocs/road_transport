<?xml version="1.0" encoding="UTF-8"?>
<document xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://modeler.netgrif.com/petriflow_schema.xsd">
	<id>service</id>
	<initials>servis</initials>
	<title>Servis</title>
	<defaultRole>true</defaultRole>
	<transitionRole>false</transitionRole>
	<!-- TRANSACTIONS -->
	<!-- ROLES -->
	<role>
		<id>system</id>
		<title>System</title>
	</role>
	<role>
		<id>director</id>
		<title>Riaditeľ</title>
	</role>
	<role>
		<id>dispatcher</id>
		<title>Dispečer</title>
	</role>
	<role>
		<id>mechanic</id>
		<title>Mechanik</title>
	</role>
	<role>
		<id>driver</id>
		<title>Vodič</title>
	</role>
	<!-- DATA -->
	<data type="text">
		<id>car_vin</id>
		<title>VIN číslo auta</title>
		<init>Servisný úkon nemá priradené vozidlo</init>
		<action trigger="get">
			parentId: f.parent_id,
			vinToCheck: f.this;
			
			if(parentId.value != null){
				def carInstance = findCase( {it._id.eq(parentId.value)} )
				if( carInstance != null ){
					def newVin = carInstance.getFieldValue("vin")
					
					if(newVin == null)
						newVin = "";
					
					change vinToCheck value {
						newVin
					}
				}
				else {
					if(vinToCheck.value.contains("Záznam auta neexistuje") == false){
						change vinToCheck value {
							vinToCheck.value + " - Záznam auta neexistuje"
						}
					}					
				}				
			}	
		</action>
	</data>
	<data type="text">
		<id>car_plate_number</id>
		<title>EČV auta</title>
		<init>Servisný úkon nemá priradené vozidlo</init>
		<action trigger="get">
			parentId: f.parent_id,
			plate_num: f.this;
			
			if(parentId.value != null){
				def carInstance = findCase( {it._id.eq(parentId.value)} )
				if( carInstance != null ){
					def newPlateNumber = carInstance.getFieldValue("plate_number")
					
					if(newPlateNumber == null)
						newPlateNumber = "";
					
					change plate_num value {
						newPlateNumber
					}
				}
				else {
					if(plate_num.value.contains("Záznam auta neexistuje") == false){
						change plate_num value {
							plate_num.value + " - Záznam auta neexistuje"
						}
					}					
				}				
			}			
		</action>
	</data>
	<data type="text">
		<id>car_name</id>
		<title>Názov auta</title>
		<init>Servisný úkon nemá priradené vozidlo</init>
		<action trigger="get">
			parentId: f.parent_id,
			name: f.this;
			
			if(parentId.value != null){
				def carInstance = findCase( {it._id.eq(parentId.value)} )
				if( carInstance != null ){
					def newName = carInstance.getFieldValue("car_name")
					
					if(newName == null)
						newName = "";
					
					change name value {
						newName
					}
				}
				else {
					if(name.value.contains("Záznam auta neexistuje") == false){
						change name value {
							name.value + " - Záznam auta neexistuje"
						}
					}					
				}				
			}			
		</action>
	</data>
	<data type="text">
		<id>car_brand</id>
		<title>Značka auta</title>
		<init>Servisný úkon nemá priradené vozidlo</init>
		<action trigger="get">
			parentId: f.parent_id,
			brand: f.this;
			
			if(parentId.value != null){
				def carInstance = findCase( {it._id.eq(parentId.value)} )
				if( carInstance != null ){
					def newBrand = carInstance.getFieldValue("brand")
					
					if(newBrand == null)
						newBrand = "";
					
					change brand value {
						newBrand
					}
				}
				else {
					if(brand.value.contains("Záznam auta neexistuje") == false){
						change brand value {
							brand.value + " - Záznam auta neexistuje"
						}
					}					
				}				
			}			
		</action>
	</data>
	<data type="text">
		<id>car_model</id>
		<title>Model auta</title>
		<init>Servisný úkon nemá priradené vozidlo</init>
		<action trigger="get">
			parentId: f.parent_id,
			model: f.this;
			
			if(parentId.value != null){
				def carInstance = findCase( {it._id.eq(parentId.value)} )
				if( carInstance != null ){
					def newModel = carInstance.getFieldValue("model")
					
					if(newModel == null)
						newModel = "";
					
					change model value {
						newModel
					}
				}
				else {
					if(model.value.contains("Záznam auta neexistuje") == false){
						change model value {
							model.value + " - Záznam auta neexistuje"
						}
					}					
				}				
			}			
		</action>
	</data>
	<data type="taskRef">
		<id>car_taskRef</id>
		<title>Zobrazenie informácií o aute</title>
	</data>
	<data type="text">
		<id>task</id>
		<title>Úloha</title>
		<values>area</values>
	</data>
	<data type="date">
		<id>deadline</id>
		<title>Konečný termín</title>
	</data>
	<data type="date">
		<id>start_date</id>
		<title>Dátum začatia</title>
	</data>
	<data type="date">
		<id>end_date</id>
		<title>Dátum ukončenia</title>
	</data>
	<data type="date">
		<id>change_date</id>
		<title>Dátum poslednej zmeny</title>
	</data>
	<data type="text">
		<id>status</id>
		<title>Stav</title>
		<action trigger="set">
			status: f.this,
			statusDesc: f.status_desc,
			history: f.status_history;
			
			def currentDateTime = java.time.LocalDateTime.now()
			def formatter = java.time.format.DateTimeFormatter.ofPattern("dd.MM.YYYY HH:mm")
			def formatedDateTime = currentDateTime.format(formatter)
			def surname = userService.getLoggedOrSystem().surname
			
			if( statusDesc.value != null ){
				def len = history.choices.size()			
				
				if( (len != 0).and(!statusDesc.value.isEmpty()) ){
					def list = new ArrayList&lt;String>(history.choices)
					def last = list.get(len - 1)
					history.choices.remove(last)
					last = (String)last + " - " + statusDesc.value
					history.choices.add(last)
				}				
			}
						
			change history choices {
				history.choices + [formatedDateTime + " -- " + status.value + " (${surname})"]
			}			
			
			def title = useCase.title
			def torn = title.split("\\{", 0)
			
			changeCaseProperty "title" about {
				torn[0] + " {${status.value}}"
			}
		</action>
	</data>
	<data type="user">
		<id>mechanic</id>
		<title>Mechanik</title>
	</data>
	<data type="text">
		<id>customer</id>
		<title>Zákazník</title>
	</data>
	<data type="text">
		<id>confirm_removal</id>
		<title>Potvrdenie vymazania</title>
		<init>Naozaj vymazať?</init>
	</data>
	<data type="text">
		<id>parent_id</id>
		<title>Car id</title>
	</data>
	<data type="text">
		<id>parent_task_id</id>
		<title>Task id</title>
	</data>
	<data type="text">
		<id>status_desc</id>
		<title>Popis</title>
		<values>area</values>
	</data>
	<data type="enumeration">
		<id>act_success</id>
		<title>Úspešnosť úkonu</title>
		<values>Úkon úspešný</values>
		<values>Úkon neúspešný</values>
	</data>
	<data type="enumeration">
		<id>status_history</id>
		<title>História stavov</title>
	</data>
	<data type="boolean">
		<id>delete_task</id>
		<title>Vymazať aj záznam úlohy?</title>
	</data>
	<data type="boolean" immediate="true">
		<id>oil_change_performed</id>
		<title>Bola vykonaná výmena oleja?</title>
		<init>false</init>
	</data>
	<data type="number">
		<id>oil_changed_at_km</id>
		<title>Súčasný počet km vozidla</title>
		<action trigger="set">
			carId: f.parent_id,
			oilChangedAtKm: f.this;
			
			if(carId.value != null){
				def car = findCase( {it._id.eq(carId.value)} )
				
				if(car != null){
					def carKm = car.getFieldValue("mileage")
					
					if((carKm != null).and(carKm > oilChangedAtKm.value)){
						change oilChangedAtKm value { carKm }					
					}
				}
			}
		</action>
		<action trigger="get">
			carId: f.parent_id,
			oilChangedAtKm: f.this;
			
			if(carId.value != null){
				def car = findCase( {it._id.eq(carId.value)} )
				if(car != null){
					def mileage = car.getFieldValue("mileage")
					if(mileage != null){
						change oilChangedAtKm value {
							mileage
						}
					}
				}
			}
		</action>
	</data>
	<data type="boolean">
		<id>deadline_notification</id>
		<title>Notifikovať termín požadovaného uzavretia?</title>
		<init>true</init>
	</data>
	<data type="boolean">
		<id>show_more_info</id>
		<title>Rozšírené</title>
	</data>
	<data type="text">
		<id>visual_id</id>
		<title>ID</title>
	</data>
	<!-- I18NS -->
	<!-- TRANSITIONS -->
	<transition>
		<id>9</id>
		<x>420</x>
		<y>340</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Vytvorenie záznamu</label>
		<roleRef>
			<id>system</id>
			<logic>
				<perform>true</perform>
				<delegate>true</delegate>
				<view>true</view>
			</logic>
		</roleRef>
		<dataGroup>
			<layout>grid</layout>
			<id>DataGroup_1</id>
			<dataRef>
				<id>parent_id</id>
				<logic>
					<behavior>hidden</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>8</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>parent_task_id</id>
				<logic>
					<behavior>hidden</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>8</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>car_taskRef</id>
				<logic>
					<behavior>visible</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>8</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
		<dataGroup>
			<layout>grid</layout>
			<id>DataGroup_0</id>
			<dataRef>
				<id>task</id>
				<logic>
					<behavior>editable</behavior>
					<behavior>required</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>2</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>deadline</id>
				<logic>
					<behavior>editable</behavior>
					<behavior>required</behavior>
				</logic>
				<layout>
					<x>2</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>customer</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>3</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
		<event type="assign">
			<id>9_assign</id>
			<actions phase="pre">
				<action>	
					taskRef: f.car_taskRef,
					parentId: f.parent_id,
					thisTask: t.9;
					
					def taskToRef = findTask( {it.caseId.eq(useCase.stringId).and(it.transitionId.eq("72"))} )
					
					if(taskToRef != null){
						change taskRef value {
							[taskToRef.stringId];
						}
					}	
					
					if(parentId.value == null){
						make taskRef, forbidden on thisTask when{ true }
					}
					else{
						make taskRef, visible on thisTask when{ true }
					}

				</action>
			</actions>
		</event>
		<event type="cancel">
			<id>9_cancel</id>
			<actions phase="post">
				<action>	
					taskId: f.parent_task_id,
					carId: f.parent_id;
					
					//also cancel car.task
					if(carId.value != null){
						carTask = findTask( {it.caseId.eq(carId.value).and(it.transitionId.eq("20"))} )
						
						if(carTask != null){
							cancelTask(carTask)
						}
					}
					
					//also cancel task.task
					if(taskId.value != null){
						taskTask = findTask( {it.caseId.eq(taskId.value).and(it.transitionId.eq("24"))} )
						
						if(taskTask != null){
							cancelTask(taskTask)
						}
					}	

					async.run{
						workflowService.deleteCase(useCase.stringId)
					}					
				</action>
			</actions>
		</event>
		<event type="finish">
			<id>9_finish</id>
			<actions phase="pre">
				<action>
					parentId: f.parent_id,
					carBrand: f.car_brand,
					carModel: f.car_model,
					carName: f.car_name,
					carPlateNumber: f.car_plate_number;
					
					String resultStr;					
					
					if(parentId.value != null){
						def parentCase = findCase( {it._id.eq(parentId.value)} )
						
						if(parentCase != null){
							def count = parentCase.getFieldValue("count_services")
							
							if(carName.value.isEmpty()){
								resultStr = "Servis č." + (count+1 as Integer) + " - " + carPlateNumber.value + " - " + carBrand.value + " " + carModel.value + " {}"
							}
							else{
								resultStr = "Servis č." + (count+1 as Integer) + " - " + carName.value + " - "+ carPlateNumber.value + " - "+ carBrand.value + " " + carModel.value + " {}"
							}
						}
						else{
							resultStr = useCase.visualId;
						}
						
					}
					else{
						resultStr = useCase.visualId;
					}
					
					changeCaseProperty "title" about {
						resultStr
					}
				</action>
			</actions>
			<actions phase="post">
				<action>
					status: f.status,
					carId: f.parent_id,
					taskId: f.parent_task_id,
					id: f.visual_id,
					start_date: f.start_date;
					
					//finish carTask as well (if exists)
					if(carId.value != null){
						def car = findCase( {it._id.eq(carId.value)} )
						def carTask = findTask( {it.caseId.eq(carId.value).and(it.transitionId.eq("20"))} )						
						
						if((carTask != null).and(car != null)){
							def numberOfServices = car.getFieldValue("count_services")
							
							finishTask(carTask)
							
							if(numberOfServices != null){
								setData(carTask, [
									"count_services": [
										"value": numberOfServices + 1,
										"type" : "number"
									],
								])
							}													
						}
					}	

					//finish taskTask as well (if exists)
					if(taskId.value != null){
						def taskTask = findTask( {it.caseId.eq(taskId.value).and(it.transitionId.eq("24"))} )						
						
						if(taskTask != null){
							finishTask(taskTask)												
						}
					}					
					
					change start_date value{ java.time.LocalDate.now() }		

					change id value { useCase.visualId.split("-")[1] }
					
					change status value{
						"V očakávaní";
					}
				</action>
			</actions>
		</event>
	</transition>
	<transition>
		<id>show</id>
		<x>420</x>
		<y>100</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Zobrazenie informácií</label>
		<assignPolicy>auto</assignPolicy>
		<roleRef>
			<id>system</id>
			<logic>
				<perform>true</perform>
				<delegate>true</delegate>
				<view>true</view>
			</logic>
		</roleRef>
		<roleRef>
			<id>director</id>
			<logic>
				<perform>true</perform>
				<view>true</view>
			</logic>
		</roleRef>
		<roleRef>
			<id>dispatcher</id>
			<logic>
				<perform>true</perform>
				<view>true</view>
			</logic>
		</roleRef>
		<roleRef>
			<id>mechanic</id>
			<logic>
				<perform>true</perform>
				<view>true</view>
			</logic>
		</roleRef>
		<roleRef>
			<id>driver</id>
			<logic>
				<perform>true</perform>
				<view>true</view>
			</logic>
		</roleRef>
		<dataGroup>
			<id>DataGroup_2</id>
			<dataRef>
				<id>car_taskRef</id>
				<logic>
					<behavior>visible</behavior>
					<action trigger="get">
						taskRef: f.car_taskRef,
						parentId: f.parent_id,
						thisTask: t.show;		

						if(parentId.value == null){
							make taskRef, forbidden on thisTask when{ true }
						}
						else{
							make taskRef, visible on thisTask when{ true }
						}
					</action>
				</logic>
				<layout>
					<x>2</x>
					<y>4</y>
					<rows>1</rows>
					<cols>2</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
		<dataGroup>
			<layout>grid</layout>
			<id>DataGroup_1</id>
			<dataRef>
				<id>mechanic</id>
				<logic>
					<behavior>visible</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>status</id>
				<logic>
					<behavior>visible</behavior>
				</logic>
				<layout>
					<x>1</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>deadline</id>
				<logic>
					<behavior>visible</behavior>
				</logic>
				<layout>
					<x>2</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>fill</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>customer</id>
				<logic>
					<behavior>visible</behavior>
				</logic>
				<layout>
					<x>3</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>task</id>
				<logic>
					<behavior>visible</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>1</y>
					<rows>1</rows>
					<cols>3</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>show_more_info</id>
				<logic>
					<behavior>editable</behavior>
					<action trigger="get">
						thisTask: t.show,
						btn: f.this,
						id: f.visual_id,
						statusHistory: f.status_history,
						actSuccess: f.act_success,
						startDate: f.start_date,
						endDate: f.end_date,
						changeDate: f.change_date;

						make id, hidden on thisTask when { !btn.value }	
						make statusHistory, hidden on thisTask when { !btn.value }	
						make actSuccess, hidden on thisTask when { !btn.value }
						make startDate, hidden on thisTask when { !btn.value }
						make endDate, hidden on thisTask when { !btn.value }
						make changeDate, hidden on thisTask when { !btn.value }
					</action>
					<action trigger="set">
						thisTask: t.show,
						btn: f.this,
						id: f.visual_id,
						statusHistory: f.status_history,
						actSuccess: f.act_success,
						startDate: f.start_date,
						endDate: f.end_date,
						changeDate: f.change_date;
						
						make id, visible on thisTask when { btn.value }
						make id, hidden on thisTask when { !btn.value }	
						
						make statusHistory, editable on thisTask when { btn.value }
						make statusHistory, hidden on thisTask when { !btn.value }	

						make actSuccess, visible on thisTask when { btn.value.and(actSuccess.value != null) }
						make actSuccess, hidden on thisTask when { !btn.value }
						
						make startDate, visible on thisTask when { btn.value }
						make startDate, hidden on thisTask when { !btn.value }
						
						make endDate, visible on thisTask when { btn.value.and(endDate.value != null) }
						make endDate, hidden on thisTask when { !btn.value }
						
						make changeDate, visible on thisTask when { btn.value }
						make changeDate, hidden on thisTask when { !btn.value }
					</action>
				</logic>
				<layout>
					<x>3</x>
					<y>1</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
		<dataGroup>
			<layout>grid</layout>
			<id>DataGroup_0</id>
			<dataRef>
				<id>visual_id</id>
				<logic>
					<behavior>hidden</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>start_date</id>
				<logic>
					<behavior>hidden</behavior>
				</logic>
				<layout>
					<x>1</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>change_date</id>
				<logic>
					<behavior>hidden</behavior>
				</logic>
				<layout>
					<x>2</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>status_history</id>
				<logic>
					<behavior>hidden</behavior>
				</logic>
				<layout>
					<x>3</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>end_date</id>
				<logic>
					<behavior>hidden</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>1</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>act_success</id>
				<logic>
					<behavior>hidden</behavior>
				</logic>
				<layout>
					<x>1</x>
					<y>1</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
	</transition>
	<transition>
		<id>11</id>
		<x>572</x>
		<y>100</y>
		<layout>
			<cols>3</cols>
			<offset>0</offset>
		</layout>
		<label>Upravenie informácií</label>
		<roleRef>
			<id>system</id>
			<logic>
				<perform>true</perform>
				<delegate>true</delegate>
				<view>true</view>
			</logic>
		</roleRef>
		<roleRef>
			<id>director</id>
			<logic>
				<perform>true</perform>
				<view>true</view>
			</logic>
		</roleRef>
		<roleRef>
			<id>mechanic</id>
			<logic>
				<perform>true</perform>
				<view>true</view>
			</logic>
		</roleRef>
		<dataGroup>
			<layout>grid</layout>
			<id>DataGroup_0</id>
			<dataRef>
				<id>mechanic</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>deadline</id>
				<logic>
					<behavior>editable</behavior>
					<behavior>required</behavior>
				</logic>
				<layout>
					<x>1</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>customer</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>2</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>task</id>
				<logic>
					<behavior>editable</behavior>
					<behavior>required</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>1</y>
					<rows>1</rows>
					<cols>3</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>			
		</dataGroup>
		<event type="finish">
			<id>11_finish</id>
			<actions phase="post">
				<action>				
					changeDate: f.change_date;
					
					change changeDate value {
						java.time.LocalDate.now()
					}									
				</action>
			</actions>
		</event>
	</transition>
	<transition>
		<id>12</id>
		<x>580</x>
		<y>220</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Vymazanie záznamu</label>
		<assignPolicy>auto</assignPolicy>
		<roleRef>
			<id>system</id>
			<logic>
				<perform>true</perform>
				<delegate>true</delegate>
				<view>true</view>
			</logic>
		</roleRef>
		<roleRef>
			<id>director</id>
			<logic>
				<perform>true</perform>
				<view>true</view>
			</logic>
		</roleRef>
		<roleRef>
			<id>mechanic</id>
			<logic>
				<perform>true</perform>
				<view>true</view>
			</logic>
		</roleRef>
		<dataGroup>
			<layout>grid</layout>
			<id>DataGroup_0</id>
			<dataRef>
				<id>confirm_removal</id>
				<logic>
					<behavior>visible</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>fill</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>delete_task</id>
				<logic>
					<behavior>visible</behavior>
					<action trigger="get">
						dis: f.this;
						
						change dis value {
							false
						}
					</action>
				</logic>
				<layout>
					<x>1</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>fill</appearance>
				</layout>
			</dataRef>
		</dataGroup>
		<event type="assign">
			<id>12_assign</id>
			<actions phase="pre">
				<action>				
					deleteTask: f.delete_task,
					taskId: f.parent_task_id,
					thisTask: t.12;
					
					if(taskId.value != null){
						def taskCase = findCase( {it._id.eq(taskId.value)} )
						
						if(taskCase == null){
							make deleteTask, visible on thisTask when { true }
						} else {
							make deleteTask, editable on thisTask when { true }
						}
					}																			
				</action>
			</actions>
		</event>
		<event type="finish">
			<id>12_finish</id>
			<actions phase="post">
				<action>				
					deleteTask: f.delete_task,
					taskId: f.parent_task_id;
					
					if(deleteTask.value){
						def removeTrans = findTask( {it.caseId.eq(taskId.value).and(it.transitionId.eq("10"))} )
						
						if(removeTrans != null){
							assignTask(removeTrans)
							finishTask(removeTrans)
						}						
					}
				
					def toRemove = findCase( { it._id.eq(useCase._id) } );
			
					if(toRemove != null){
						async.run{
							workflowService.deleteCase(toRemove._id.toString());
						}
					}									
				</action>
			</actions>
		</event>
	</transition>
	<transition>
		<id>13</id>
		<x>780</x>
		<y>340</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Vykonanie obhliadky</label>
		<assignPolicy>auto</assignPolicy>
		<roleRef>
			<id>system</id>
			<logic>
				<perform>true</perform>
				<delegate>true</delegate>
				<view>true</view>
			</logic>
		</roleRef>
		<roleRef>
			<id>director</id>
			<logic>
				<perform>true</perform>
				<view>true</view>
			</logic>
		</roleRef>
		<roleRef>
			<id>mechanic</id>
			<logic>
				<perform>true</perform>
				<view>true</view>
			</logic>
		</roleRef>
		<dataGroup>
			<layout>grid</layout>
			<id>DataGroup_0</id>
			<dataRef>
				<id>status_desc</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>1</x>
					<y>0</y>
					<rows>1</rows>
					<cols>2</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
		<event type="assign">
			<id>13_assign</id>
			<actions phase="pre">
				<action>
					desc: f.status_desc;
					
					change desc value{ "" }
				</action>
			</actions>
		</event>
		<event type="finish">
			<id>13_finish</id>
			<actions phase="pre">
				<action>
					status: f.status;					

					change status value{
						"Prebieha obhliadka";
					}
				</action>
			</actions>
		</event>
	</transition>
	<transition>
		<id>14</id>
		<x>620</x>
		<y>460</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Chyby nenájdené</label>
		<assignPolicy>auto</assignPolicy>
		<roleRef>
			<id>system</id>
			<logic>
				<perform>true</perform>
				<delegate>true</delegate>
				<view>true</view>
			</logic>
		</roleRef>
		<roleRef>
			<id>director</id>
			<logic>
				<perform>true</perform>
				<view>true</view>
			</logic>
		</roleRef>
		<roleRef>
			<id>mechanic</id>
			<logic>
				<perform>true</perform>
				<view>true</view>
			</logic>
		</roleRef>
		<dataGroup>
			<layout>grid</layout>
			<id>DataGroup_0</id>
			<dataRef>
				<id>status_desc</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>1</x>
					<y>0</y>
					<rows>1</rows>
					<cols>2</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
		<event type="assign">
			<id>14_assign</id>
			<actions phase="pre">
				<action>
					desc: f.status_desc;
					
					change desc value{ "" }
				</action>
			</actions>
		</event>
		<event type="finish">
			<id>14_finish</id>
			<actions phase="pre">
				<action>
					status: f.status;

					change status value {
						"V očakávaní";
					}
				</action>
			</actions>
		</event>
	</transition>
	<transition>
		<id>15</id>
		<x>100</x>
		<y>460</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Nevykonanie úkonu</label>
		<assignPolicy>auto</assignPolicy>
		<roleRef>
			<id>system</id>
			<logic>
				<perform>true</perform>
				<delegate>true</delegate>
				<view>true</view>
			</logic>
		</roleRef>
		<roleRef>
			<id>director</id>
			<logic>
				<perform>true</perform>
				<view>true</view>
			</logic>
		</roleRef>
		<roleRef>
			<id>mechanic</id>
			<logic>
				<perform>true</perform>
				<view>true</view>
			</logic>
		</roleRef>
		<dataGroup>
			<layout>grid</layout>
			<id>DataGroup_0</id>
			<dataRef>
				<id>status_desc</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>1</x>
					<y>0</y>
					<rows>1</rows>
					<cols>2</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
		<event type="assign">
			<id>15_assign</id>
			<actions phase="pre">
				<action>
					desc: f.status_desc;
					
					change desc value{ "" }
				</action>
			</actions>
		</event>
		<event type="finish">
			<id>15_finish</id>
			<actions phase="pre">
				<action>
					closeDate: f.end_date,
					actSuccess: f.act_success,
					status: f.status;
					
					change closeDate value {
						java.time.LocalDate.now()
					}
					
					change actSuccess value{
						actSuccess.choices[1]
					}

					change status value{
						"Úkon nevykonaný"
					}
				</action>
			</actions>
		</event>
	</transition>
	<transition>
		<id>16</id>
		<x>780</x>
		<y>580</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Chyby nájdené</label>
		<assignPolicy>auto</assignPolicy>
		<roleRef>
			<id>system</id>
			<logic>
				<perform>true</perform>
				<delegate>true</delegate>
				<view>true</view>
			</logic>
		</roleRef>
		<roleRef>
			<id>director</id>
			<logic>
				<perform>true</perform>
				<view>true</view>
			</logic>
		</roleRef>
		<roleRef>
			<id>mechanic</id>
			<logic>
				<perform>true</perform>
				<view>true</view>
			</logic>
		</roleRef>
		<dataGroup>
			<layout>grid</layout>
			<id>DataGroup_0</id>
			<dataRef>
				<id>status_desc</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>1</x>
					<y>0</y>
					<rows>1</rows>
					<cols>2</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
		<event type="assign">
			<id>16_assign</id>
			<actions phase="pre">
				<action>
					desc: f.status_desc;
					
					change desc value{ "" }
				</action>
			</actions>
		</event>
		<event type="finish">
			<id>16_finish</id>
			<actions phase="pre">
				<action>status: f.status;

change status value{
    "Pripravené vykonať úkon"
}</action>
			</actions>
		</event>
	</transition>
	<transition>
		<id>19</id>
		<x>620</x>
		<y>700</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Začatie úkonu</label>
		<assignPolicy>auto</assignPolicy>
		<roleRef>
			<id>system</id>
			<logic>
				<perform>true</perform>
				<delegate>true</delegate>
				<view>true</view>
			</logic>
		</roleRef>
		<roleRef>
			<id>director</id>
			<logic>
				<perform>true</perform>
				<view>true</view>
			</logic>
		</roleRef>
		<roleRef>
			<id>mechanic</id>
			<logic>
				<perform>true</perform>
				<view>true</view>
			</logic>
		</roleRef>
		<dataGroup>
			<layout>grid</layout>
			<id>DataGroup_0</id>
			<dataRef>
				<id>status_desc</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>1</x>
					<y>0</y>
					<rows>1</rows>
					<cols>2</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
		<event type="assign">
			<id>19_assign</id>
			<actions phase="pre">
				<action>
					desc: f.status_desc;
					
					change desc value{ "" }
				</action>
			</actions>
		</event>
		<event type="finish">
			<id>19_finish</id>
			<actions phase="post">
				<action>
					statuss: f.status;

					change statuss value{
						"Úkon sa vykonáva";
					}
				</action>
			</actions>
		</event>
	</transition>
	<transition>
		<id>20</id>
		<x>100</x>
		<y>700</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Dokončenie úkonu</label>
		<assignPolicy>auto</assignPolicy>
		<roleRef>
			<id>system</id>
			<logic>
				<perform>true</perform>
				<delegate>true</delegate>
				<view>true</view>
			</logic>
		</roleRef>
		<roleRef>
			<id>director</id>
			<logic>
				<perform>true</perform>
				<view>true</view>
			</logic>
		</roleRef>
		<roleRef>
			<id>mechanic</id>
			<logic>
				<perform>true</perform>
				<view>true</view>
			</logic>
		</roleRef>
		<dataGroup>
			<layout>grid</layout>
			<id>DataGroup_0</id>
			<dataRef>
				<id>act_success</id>
				<logic>
					<behavior>editable</behavior>
					<behavior>required</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>status_desc</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>1</x>
					<y>0</y>
					<rows>1</rows>
					<cols>2</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
		<dataGroup>
			<layout>grid</layout>
			<id>DataGroup_1</id>
			<dataRef>
				<id>oil_change_performed</id>
				<logic>
					<behavior>editable</behavior>
					<action trigger="set">
						oilPerformed: f.this,
						oilChangedAtKm: f.oil_changed_at_km,
						thisTask: t.20;
						
						make oilChangedAtKm, editable on thisTask when{
							oilPerformed.value
						}
						make oilChangedAtKm, required on thisTask when{
							oilPerformed.value
						}
						make oilChangedAtKm, hidden on thisTask when{
							!oilPerformed.value
						}
					</action>
					<action trigger="get">
						carId: f.parent_id,
						oilPerformed: f.this,
						thisTask: t.20;
						
						change oilPerformed value{ false }
						
						make oilPerformed, editable on thisTask when { carId.value != null }
					</action>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>oil_changed_at_km</id>
				<logic>
					<behavior>hidden</behavior>
					<action trigger="get">
						oilPerformed: f.oil_change_performed,
						oilChangedAtKm: f.this,
						thisTask: t.20;
						
						make oilChangedAtKm, hidden on thisTask when { !oilPerformed.value }
					</action>
				</logic>
				<layout>
					<x>1</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
		<event type="assign">
			<id>20_assign</id>
			<actions phase="pre">
				<action>
					desc: f.status_desc;
					
					change desc value{ null }
				</action>
			</actions>
		</event>
		<event type="finish">
			<id>20_finish</id>
			<actions phase="post">
				<action>
					status: f.status,
					carId: f.parent_id,
					oilPerformed: f.oil_change_performed,
					oilChangedAtKm: f.oil_changed_at_km,
					endDate: f.end_date;
					
					// update mileage and last_oil_change_date in car
					if((carId.value != null).and(oilPerformed.value)){
						def car = findCase( {it._id.eq(carId.value)} )
						def tmpNowDate = java.time.LocalDate.now()
						if(car != null){						
							setData("18", car, [
								"mileage": [
									"value": oilChangedAtKm.value,
									"type" : "number"
								],
								"last_oil_change_mileage": [
									"value": oilChangedAtKm.value,
									"type" : "number"
								],
								"last_oil_change_date": [
									"value": tmpNowDate.toString(),
									"type" : "date"
								],
							])
						}											
					}
					
					change endDate value {
						java.time.LocalDate.now()
					}						

					change status value {
						"Úkon dokončený"
					}
				</action>
			</actions>
		</event>
	</transition>
	<transition>
		<id>47</id>
		<x>420</x>
		<y>540</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Znovuotvorenie záznamu</label>
		<assignPolicy>auto</assignPolicy>
		<roleRef>
			<id>system</id>
			<logic>
				<perform>true</perform>
				<delegate>true</delegate>
				<view>true</view>
			</logic>
		</roleRef>
		<roleRef>
			<id>director</id>
			<logic>
				<perform>true</perform>
				<view>true</view>
			</logic>
		</roleRef>
		<roleRef>
			<id>dispatcher</id>
			<logic>
				<perform>true</perform>
				<view>true</view>
			</logic>
		</roleRef>
		<roleRef>
			<id>mechanic</id>
			<logic>
				<perform>true</perform>
				<view>true</view>
			</logic>
		</roleRef>
		<dataGroup>
			<layout>grid</layout>
			<id>DataGroup_0</id>
			<dataRef>
				<id>status_desc</id>
				<logic>
					<behavior>editable</behavior>
					<behavior>required</behavior>
				</logic>
				<layout>
					<x>1</x>
					<y>0</y>
					<rows>1</rows>
					<cols>2</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
		<event type="assign">
			<id>47_assign</id>
			<actions phase="pre">
				<action>
					desc: f.status_desc;
					
					change desc value { null }
				</action>
			</actions>
		</event>
		<event type="finish">
			<id>47_finish</id>
			<actions phase="post">
				<action>
					status: f.status,
					closeDate: f.end_date,
					stateList: f.act_success;

					change closeDate value { null }
					change stateList value { null }
			
					change status value{
						"V očakávaní"
					}
				</action>
			</actions>
		</event>
	</transition>
	<transition>
		<id>72</id>
		<x>93</x>
		<y>219</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Zobrazenie informácií o aute</label>
		<roleRef>
			<id>system</id>
			<logic>
				<perform>true</perform>
				<delegate>true</delegate>
				<view>true</view>
			</logic>
		</roleRef>
		<dataGroup>
			<layout>grid</layout>
			<id>DataGroup_0</id>
			<dataRef>
				<id>car_brand</id>
				<logic>
					<behavior>visible</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>car_model</id>
				<logic>
					<behavior>visible</behavior>
				</logic>
				<layout>
					<x>1</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>car_plate_number</id>
				<logic>
					<behavior>visible</behavior>
				</logic>
				<layout>
					<x>2</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>car_name</id>
				<logic>
					<behavior>visible</behavior>
				</logic>
				<layout>
					<x>3</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
		<event type="assign">
			<id>47_assign</id>
			<actions phase="pre">
				<action>
					desc: f.status_desc;
					
					change desc value { null }
				</action>
			</actions>
		</event>
	</transition>
	<transition>
		<id>73</id>
		<x>260</x>
		<y>220</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Nastavenie notifikácií</label>
		<assignPolicy>auto</assignPolicy>
		<roleRef>
			<id>system</id>
			<logic>
				<perform>true</perform>
				<delegate>true</delegate>
				<view>true</view>
			</logic>
		</roleRef>
		<roleRef>
			<id>director</id>
			<logic>
				<perform>true</perform>
				<view>true</view>
			</logic>
		</roleRef>
		<roleRef>
			<id>dispatcher</id>
			<logic>
				<perform>true</perform>
				<view>true</view>
			</logic>
		</roleRef>
		<roleRef>
			<id>mechanic</id>
			<logic>
				<perform>true</perform>
				<view>true</view>
			</logic>
		</roleRef>
		<dataGroup>
			<id>DataGroup_0</id>
			<dataRef>
				<id>deadline_notification</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>1</x>
					<y>0</y>
					<rows>1</rows>
					<cols>2</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>		
	</transition>	
	<!-- PLACES -->
	<place>
		<id>1</id>
		<x>300</x>
		<y>340</y>
		<label>init</label>
		<tokens>1</tokens>
		<static>false</static>
	</place>
	<place>
		<id>2</id>
		<x>620</x>
		<y>340</y>
		<label>v ocakavani</label>
		<tokens>0</tokens>
		<static>false</static>
	</place>
	<place>
		<id>3</id>
		<x>420</x>
		<y>220</y>
		<label>Záznam existuje</label>
		<tokens>0</tokens>
		<static>false</static>
	</place>
	<place>
		<id>4</id>
		<x>780</x>
		<y>460</y>
		<label>Obhliadka prebieha</label>
		<tokens>0</tokens>
		<static>false</static>
	</place>
	<place>
		<id>6</id>
		<x>780</x>
		<y>700</y>
		<label>Pripravené vykonať úkon</label>
		<tokens>0</tokens>
		<static>false</static>
	</place>
	<place>
		<id>7</id>
		<x>460</x>
		<y>700</y>
		<label>Úkon sa vykonáva</label>
		<tokens>0</tokens>
		<static>false</static>
	</place>
	<place>
		<id>44</id>
		<x>100</x>
		<y>580</y>
		<label>Spracovanie záznamu dokončené</label>
		<tokens>0</tokens>
		<static>false</static>
	</place>
	<!-- ARCS -->
	<arc>
		<id>21</id>
		<type>regular</type>
		<sourceId>1</sourceId>
		<destinationId>9</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>22</id>
		<type>regular</type>
		<sourceId>9</sourceId>
		<destinationId>3</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>23</id>
		<type>regular</type>
		<sourceId>9</sourceId>
		<destinationId>2</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>24</id>
		<type>regular</type>
		<sourceId>2</sourceId>
		<destinationId>13</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>25</id>
		<type>regular</type>
		<sourceId>13</sourceId>
		<destinationId>4</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>26</id>
		<type>regular</type>
		<sourceId>4</sourceId>
		<destinationId>14</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>27</id>
		<type>regular</type>
		<sourceId>14</sourceId>
		<destinationId>2</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>32</id>
		<type>regular</type>
		<sourceId>4</sourceId>
		<destinationId>16</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>33</id>
		<type>regular</type>
		<sourceId>16</sourceId>
		<destinationId>6</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>35</id>
		<type>regular</type>
		<sourceId>19</sourceId>
		<destinationId>7</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>36</id>
		<type>regular</type>
		<sourceId>7</sourceId>
		<destinationId>20</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>38</id>
		<type>regular</type>
		<sourceId>2</sourceId>
		<destinationId>15</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>40</id>
		<type>read</type>
		<sourceId>3</sourceId>
		<destinationId>show</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>43</id>
		<type>regular</type>
		<sourceId>3</sourceId>
		<destinationId>12</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>45</id>
		<type>regular</type>
		<sourceId>20</sourceId>
		<destinationId>44</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>46</id>
		<type>regular</type>
		<sourceId>15</sourceId>
		<destinationId>44</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>49</id>
		<type>regular</type>
		<sourceId>47</sourceId>
		<destinationId>2</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>50</id>
		<type>regular</type>
		<sourceId>44</sourceId>
		<destinationId>47</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>71</id>
		<type>regular</type>
		<sourceId>6</sourceId>
		<destinationId>19</destinationId>
		<multiplicity>1</multiplicity>
	</arc>	
	<arc>
		<id>74</id>
		<type>read</type>
		<sourceId>3</sourceId>
		<destinationId>73</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>75</id>
		<type>regular</type>
		<sourceId>11</sourceId>
		<destinationId>3</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>76</id>
		<type>regular</type>
		<sourceId>3</sourceId>
		<destinationId>11</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
</document>
